<UserControl
    x:Class="BluetoothDeviceController.UserPreferenceControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BluetoothDeviceController"
    xmlns:enumUtilities="using:enumUtilities" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <!-- You have to compile MainPage.Xaml.Cs for VS to find the local: class. -->
        <local:DisplayPreferenceConverter x:Key="DisplayPreferenceConverter" />
        <local:SearchScopeConverter x:Key="SearchScopeConverter" />
        <local:ReadSelectionConverter x:Key="ReadSelectionConverter" />
    </UserControl.Resources>
    <StackPanel>
        <TextBlock Style="{StaticResource TitleStyle}">Bluetooth Search Settings</TextBlock>
        <ComboBox  x:Name="SearchScopeComboBox" Header="Show which devices?" MinWidth="180"
                   SelectionChanged="OnSearchScopeChanged"
                      ItemsSource="{Binding Source={StaticResource SearchScopeConverter}, Path=EnumValues}" 
                      SelectedItem="{Binding Scope, Mode=TwoWay}">
            <!-- In order to display the strings from the DisplayAttribute you need to add a converter. -->
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock FontSize="14" Text="{Binding Converter={StaticResource SearchScopeConverter}}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <ComboBox  Name="DisplayPreferenceComboBox" Header="Preferred display?" MinWidth="180"
                       ItemsSource="{Binding Source={StaticResource DisplayPreferenceConverter}, Path=EnumValues}" 
                      SelectedItem="{Binding Display, Mode=TwoWay}">
            <!-- In order to display the strings from the DisplayAttribute you need to add a converter. -->
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock FontSize="14" Text="{Binding Converter={StaticResource DisplayPreferenceConverter}}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <StackPanel Orientation="Horizontal" Margin="0,20,0,0" Visibility="Collapsed">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="MinWidth" Value="90" />
                </Style>
            </StackPanel.Resources>
            <Button x:Name="uiSearchStart" Content="🔎 Search" Click="OnSearchStart" ToolTipService.ToolTip="Start search" />
            <Button x:Name="uiSearchCancel" Content="✘ Cancel" Click="OnSearchCancel" Margin="10,0,0,0" ToolTipService.ToolTip="Cancel current search" />
            <Button Content="✀" Click="OnCopyJson" Margin="10,0,0,0" ToolTipService.ToolTip="Copy current search results as JSON" />
        </StackPanel>

        <CheckBox MinWidth="180" Content="Automatically read from device"
                  IsChecked="{Binding AutomaticallyReadData, Mode=TwoWay}"
                  />

        <!-- Address Name Everything -->
        <ComboBox  Name="ReadSelectionComboBox"  MinWidth="180" Margin="0,4,0,0"
                       ItemsSource="{Binding Source={StaticResource ReadSelectionConverter}, Path=EnumValues}" 
                      SelectedItem="{Binding DeviceReadSelection, Mode=TwoWay}">
            <!-- In order to display the strings from the DisplayAttribute you need to add a converter. -->
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock FontSize="14" Text="{Binding Converter={StaticResource ReadSelectionConverter}}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>        
        <!--
        <CheckBox x:Name="uiReadFromEach" IsEnabled="False" Content="Attempt to read from each device" IsChecked="False" />
        -->
        <Grid HorizontalAlignment="Stretch">
            <CheckBox x:Name="uiKeepScreenOn" Content="Keep Screen On" IsChecked="False" Checked="OnKeepScreenOnChecked" Unchecked="OnKeepScreenOnChecked" />
        </Grid>
    </StackPanel>
</UserControl>
